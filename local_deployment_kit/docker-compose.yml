version: '3.8'

services:
  # MongoDB Database Service
  mongo:
    image: mongo:latest
    container_name: crypto_coach_mongo
    ports:
      - "27017:27017"
    volumes:
      # Persistent volume - data survives container restarts
      - ./data/mongodb:/data/db
      - ./data/mongodb-logs:/var/log/mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: crypto_coach_admin_2025
      MONGO_INITDB_DATABASE: crypto_trader_coach
    networks:
      - crypto_coach_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API Service
  backend:
    build: 
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: crypto_coach_backend
    ports:
      - "8001:8001"
    volumes:
      - ./app/backend:/app
      - ./logs/backend:/app/logs
    environment:
      - MONGO_URL=mongodb://admin:crypto_coach_admin_2025@mongo:27017/crypto_trader_coach?authSource=admin
      - DB_NAME=crypto_trader_coach
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - crypto_coach_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Freqtrade Trading Bot Service  
  freqtrade:
    build:
      context: ./app/freqtrade
      dockerfile: Dockerfile
    container_name: crypto_coach_freqtrade
    ports:
      - "8082:8082"
    volumes:
      - ./app/freqtrade:/freqtrade
      - ./data/freqtrade:/freqtrade/user_data
      - ./logs/freqtrade:/freqtrade/logs
    environment:
      - FREQTRADE_CONFIG=/freqtrade/config.json
    depends_on:
      - backend
    networks:
      - crypto_coach_network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Starting Freqtrade in API mode...' &&
        python3 luno_trading_bot.py --config config.json --strategy LunoFreqAIStrategy
      "

  # Frontend React Application
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: crypto_coach_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend/src:/app/src
      - ./app/frontend/public:/app/public
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - crypto_coach_network
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  crypto_coach_network:
    driver: bridge
    name: crypto_coach_network

volumes:
  mongodb_data:
    driver: local
  freqtrade_data:
    driver: local
  backend_logs:
    driver: local