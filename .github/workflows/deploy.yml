name: Build and Deploy to VPS

on:
  push:
    branches: [ for-deployment ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: henrijc/trading-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: vps_deployment_package/docker/Dockerfile.backend.prod
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: vps_deployment_package/docker/Dockerfile.frontend.prod
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push freqtrade image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: vps_deployment_package/docker/Dockerfile.freqtrade.prod
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-freqtrade:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_C_BOT_HOST }}
        username: ${{ secrets.VPS_C_BOT_USER }}
        key: ${{ secrets.VPS_SSH_C_BOT_KEY }}
        timeout: 1200s
        command_timeout: 1800s
        script: |
          echo "${{ secrets.GHCR_PAT }}" | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          
          cd /opt/crypto-coach || (git clone --branch for-deployment git@github.com:Henrijc/Trading-bot.git /opt/crypto-coach && cd /opt/crypto-coach)
          
          git fetch --all
          git reset --hard origin/for-deployment
          
          sudo docker compose -f vps_deployment_package/docker/docker-compose.prod.yml --env-file /opt/crypto-coach/.env pull
          sudo docker compose -f vps_deployment_package/docker/docker-compose.prod.yml --env-file /opt/crypto-coach/.env up -d --remove-orphans