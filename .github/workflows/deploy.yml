name: Copy Fixed Files to VPS

on:
  push:
    branches: [ for-deployment ]
  workflow_dispatch:

jobs:
  copy-files-to-vps:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Copy files to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 156.155.253.224
        username: cryptoadmin
        password: ${{ secrets.VPS_PASSWORD }}  # Add this secret if using password
        timeout: 300s
        command_timeout: 600s
        script: |
          echo "=== COPYING FIXED FILES TO VPS ==="
          
          # Navigate to deployment directory
          cd /opt/crypto-coach || {
            echo "ERROR: /opt/crypto-coach directory not found"
            exit 1
          }
          
          # Backup current state (just in case)
          echo "Creating backup of current state..."
          cp -r /opt/crypto-coach /opt/crypto-coach-backup-$(date +%Y%m%d_%H%M%S) || true
          
          # Pull latest changes with all fixes
          echo "Pulling latest changes from repository..."
          git fetch --all
          git reset --hard origin/for-deployment
          
          # Ensure critical __init__.py files exist (failsafe)
          echo "Ensuring critical __init__.py files exist..."
          touch __init__.py
          touch backend/__init__.py
          touch backend/services/__init__.py
          touch freqtrade/__init__.py
          touch freqtrade/user_data/__init__.py
          touch freqtrade/user_data/strategies/__init__.py
          
          # Set correct permissions
          echo "Setting correct permissions..."
          chown -R cryptoadmin:cryptoadmin /opt/crypto-coach
          chmod +x deploy_vps_commands.sh 2>/dev/null || true
          chmod +x verify_deployment_fixes.py 2>/dev/null || true
          
          # Verify files were copied correctly
          echo "Verifying critical files exist..."
          
          # Check __init__.py files
          if [ -f "__init__.py" ] && [ -f "backend/__init__.py" ] && [ -f "backend/services/__init__.py" ]; then
            echo "✅ Critical __init__.py files present"
          else
            echo "❌ Some __init__.py files missing"
          fi
          
          # Check Dockerfiles
          if [ -f "backend/Dockerfile" ] && [ -f "freqtrade/Dockerfile" ]; then
            echo "✅ Updated Dockerfiles present"
          else
            echo "❌ Dockerfiles missing"
          fi
          
          # Check key service files
          if [ -f "backend/services/emergent_mock.py" ] && [ -f "backend/services/database_service.py" ]; then
            echo "✅ New service files present"
          else
            echo "❌ Some service files missing"
          fi
          
          echo "=== FILE COPY COMPLETED ==="
          echo "All fixes have been copied to the VPS."
          echo "You can now manually run the deployment commands:"
          echo "  cd /opt/crypto-coach"
          echo "  ./deploy_vps_commands.sh"
          echo ""
          echo "Or test the fixes first:"
          echo "  python3 verify_deployment_fixes.py"