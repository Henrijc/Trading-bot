version: '3.8'

services:
  mongodb:
    image: mongo:7-jammy
    container_name: cryptobot_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: cryptobot
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-cryptobot_secure_pass}
      MONGO_INITDB_DATABASE: cryptobot_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - cryptobot_network

  redis:
    image: redis:7-alpine
    container_name: cryptobot_redis
    restart: unless-stopped
    command: redis-server ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - cryptobot_network

  backend:
    build:
      context: ./backend
    container_name: cryptobot_backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://cryptobot:${MONGO_PASSWORD:-cryptobot_secure_pass}@mongodb:27017/cryptobot_db?authSource=admin
      - REDIS_URL=redis://${REDIS_PASSWORD:+:$REDIS_PASSWORD@}redis:6379
      - LUNO_API_KEY=${LUNO_API_KEY}
      - LUNO_SECRET=${LUNO_SECRET}
      - API_TOKEN=${API_TOKEN:-secure_token_123}
      - FREQTRADE_JWT_SECRET=${FREQTRADE_JWT_SECRET:-freqtrade_default_secret}
    depends_on:
      - mongodb
      - redis
    networks:
      - cryptobot_network
    ports:
      - "8004:8004"

  frontend:
    build:
      context: ./frontend
    container_name: cryptobot_frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - cryptobot_network
    ports:
      - "3003:3000"

networks:
  cryptobot_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
